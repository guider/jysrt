{"version":3,"file":"subtitle.esm.js","sources":["../src/utils.ts","../src/filter.ts","../src/formatTimestamp.ts","../src/map.ts","../src/parseSync.ts","../src/parseTimestamp.ts","../src/parseTimestamps.ts","../src/resync.ts","../src/Formatter.ts","../src/stringify.ts","../src/stringifySync.ts","../src/Parser.ts","../src/parse.ts"],"sourcesContent":["import { Duplex, DuplexOptions } from 'stream'\r\n\r\nexport const padLeft = (value: number, length = 2): string =>\r\n  value.toString().padStart(length, '0')\r\n\r\nexport const createDuplex = (options: DuplexOptions) =>\r\n  new Duplex({\r\n    objectMode: true,\r\n    autoDestroy: false,\r\n    read() {},\r\n    ...options\r\n  })\r\n","import { Node } from '.'\r\nimport { createDuplex } from './utils'\r\n\r\nexport const filter = (callback: (node: Node) => boolean) =>\r\n  createDuplex({\r\n    write(chunk, _encoding, next) {\r\n      if (callback(chunk)) {\r\n        this.push(chunk)\r\n      }\r\n      next()\r\n    }\r\n  })\r\n","import { padLeft } from './utils'\r\nimport { FormatOptions } from '.'\r\n\r\nexport function formatTimestamp(\r\n  timestamp: number,\r\n  options: FormatOptions = { format: 'SRT' }\r\n) {\r\n  const date = new Date(0, 0, 0, 0, 0, 0, timestamp)\r\n\r\n  const hours = date.getHours()\r\n  const minutes = date.getMinutes()\r\n  const seconds = date.getSeconds()\r\n  const ms = timestamp - (hours * 3600000 + minutes * 60000 + seconds * 1000)\r\n\r\n  return `${padLeft(hours)}:${padLeft(minutes)}:${padLeft(seconds)}${\r\n    options.format === 'WebVTT' ? '.' : ','\r\n  }${padLeft(ms, 3)}`\r\n}\r\n","import { Transform } from 'stream'\r\nimport { Node } from '.'\r\n\r\nexport const map = (mapper: (node: Node, index: number) => any) => {\r\n  let index = 0\r\n\r\n  return new Transform({\r\n    objectMode: true,\r\n    autoDestroy: false,\r\n    transform(chunk: Node, _encoding, callback) {\r\n      callback(null, mapper(chunk, index++))\r\n    }\r\n  })\r\n}\r\n","import { Parser } from './Parser'\r\nimport { NodeList } from '.'\r\n\r\nexport const parseSync = (input: string): NodeList => {\r\n  const buffer: NodeList = []\r\n  const parser = new Parser({\r\n    push: node => buffer.push(node)\r\n  })\r\n\r\n  input\r\n    .replace(/\\r\\n/g, '\\n')\r\n    .split('\\n')\r\n    .forEach(line => parser.parseLine(line))\r\n\r\n  parser.flush()\r\n\r\n  return buffer\r\n}\r\n","export function parseTimestamp(timestamp: string): number {\n  const match = timestamp.match(/^(?:(\\d{1,}):)?(\\d{2}):(\\d{2})[,.](\\d{3})$/)\n\n  if (!match) {\n    throw new Error('Invalid SRT or VTT time format: \"' + timestamp + '\"')\n  }\n\n  const hours = match[1] ? parseInt(match[1], 10) * 3600000 : 0\n  const minutes = parseInt(match[2], 10) * 60000\n  const seconds = parseInt(match[3], 10) * 1000\n  const milliseconds = parseInt(match[4], 10)\n\n  return hours + minutes + seconds + milliseconds\n}\n","import { parseTimestamp, Timestamp } from '.'\r\n\r\nexport const RE_TIMESTAMP = /^((?:\\d{1,}:)?\\d{2}:\\d{2}[,.]\\d{3}) --> ((?:\\d{1,}:)?\\d{2}:\\d{2}[,.]\\d{3})(?: (.*))?$/\r\n\r\nexport function parseTimestamps(value: string): Timestamp {\r\n  const match = RE_TIMESTAMP.exec(value)\r\n\r\n  if (!match) {\r\n    throw new Error('Invalid timestamp format')\r\n  }\r\n\r\n  const timestamp: Timestamp = {\r\n    start: parseTimestamp(match[1]),\r\n    end: parseTimestamp(match[2])\r\n  }\r\n\r\n  if (match[3]) {\r\n    timestamp.settings = match[3]\r\n  }\r\n\r\n  return timestamp\r\n}\r\n","import { map, Node } from '.'\r\n\r\nexport const resync = (time: number) =>\r\n  map((node: Node) => {\r\n    if (node.type === 'cue') {\r\n      return {\r\n        ...node,\r\n        data: {\r\n          ...node.data,\r\n          start: node.data.start + time,\r\n          end: node.data.end + time\r\n        }\r\n      }\r\n    }\r\n\r\n    return node\r\n  })\r\n","import { FormatOptions, Node, Cue, formatTimestamp } from '.'\r\n\r\nexport class Formatter {\r\n  private options: FormatOptions\r\n  private isVTT: boolean\r\n  private hasReceivedHeader: boolean\r\n  private index: number\r\n\r\n  constructor(options: FormatOptions) {\r\n    this.options = options\r\n    this.hasReceivedHeader = false\r\n    this.isVTT = options.format === 'WebVTT'\r\n    this.index = 1\r\n  }\r\n\r\n  public format(node: Node): string {\r\n    let buffer = ''\r\n\r\n    if (node.type === 'header' && this.isVTT) {\r\n      this.hasReceivedHeader = true\r\n      buffer += `${node.data}\\n\\n`\r\n    }\r\n\r\n    if (node.type === 'cue') {\r\n      if (!this.hasReceivedHeader && this.isVTT) {\r\n        this.hasReceivedHeader = true\r\n        buffer += 'WEBVTT\\n\\n'\r\n      }\r\n\r\n      buffer += this.formatCue(node.data, this.index++, this.options)\r\n    }\r\n\r\n    return buffer\r\n  }\r\n\r\n  private formatCue(cue: Cue, index: number, options: FormatOptions) {\r\n    return [\r\n      `${index > 1 ? '\\n' : ''}${index}`,\r\n      `${formatTimestamp(cue.start, options)} --> ${formatTimestamp(\r\n        cue.end,\r\n        options\r\n      )}${\r\n        options.format === 'WebVTT' && cue.settings ? ' ' + cue.settings : ''\r\n      }`,\r\n      cue.text,\r\n      ''\r\n    ].join('\\n')\r\n  }\r\n}\r\n","import { map, FormatOptions, Node } from '.'\r\nimport { Formatter } from './Formatter'\r\n\r\nexport const stringify = (options: FormatOptions) => {\r\n  const formatter = new Formatter(options)\r\n  return map((chunk: Node) => formatter.format(chunk))\r\n}\r\n","import { NodeList, FormatOptions } from '.'\r\nimport { Formatter } from './Formatter'\r\n\r\nexport const stringifySync = (\r\n  list: NodeList,\r\n  options: FormatOptions\r\n): string => {\r\n  const formatter = new Formatter(options)\r\n\r\n  return list.reduce((buffer, node) => {\r\n    return buffer + formatter.format(node)\r\n  }, '')\r\n}\r\n","import stripBom from 'strip-bom'\r\nimport { Node, RE_TIMESTAMP, parseTimestamps } from '.'\r\n\r\nexport type Pusher = (node: Node) => void\r\n\r\nexport interface ParseState {\r\n  expect: 'header' | 'id' | 'timestamp' | 'text'\r\n  row: number\r\n  hasContentStarted: boolean\r\n  isWebVTT: boolean\r\n  node: Partial<Node>\r\n  buffer: string[]\r\n}\r\n\r\nexport class Parser {\r\n  private push: Pusher\r\n  private state: ParseState\r\n\r\n  constructor({ push }: { push: Pusher }) {\r\n    this.push = push\r\n    this.state = {\r\n      expect: 'header',\r\n      row: 0,\r\n      hasContentStarted: false,\r\n      isWebVTT: false,\r\n      node: {},\r\n      buffer: []\r\n    }\r\n  }\r\n\r\n  private isIndex(line: string): boolean {\r\n    return /^\\d+$/.test(line.trim())\r\n  }\r\n\r\n  private isTimestamp(line: string): boolean {\r\n    return RE_TIMESTAMP.test(line)\r\n  }\r\n\r\n  private getError(expected: string, index: number, row: string): Error {\r\n    return new Error(\r\n      `expected ${expected} at row ${index + 1}, but received: \"${row}\"`\r\n    )\r\n  }\r\n\r\n  public parseLine(line: string): void {\r\n    const contents = this.state.row === 0 ? stripBom(line) : line\r\n\r\n    if (!this.state.hasContentStarted) {\r\n      if (contents.trim()) {\r\n        this.state.hasContentStarted = true\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n\r\n    const parse = {\r\n      header: this.parseHeader,\r\n      id: this.parseId,\r\n      timestamp: this.parseTimestamp,\r\n      text: this.parseText\r\n    }[this.state.expect]\r\n\r\n    parse.call(this, contents)\r\n\r\n    this.state.row++\r\n  }\r\n\r\n  public flush(): void {\r\n    if (this.state.buffer.length > 0) {\r\n      this.pushNode()\r\n    }\r\n  }\r\n\r\n  private parseHeader(line: string) {\r\n    if (!this.state.isWebVTT) {\r\n      this.state.isWebVTT = /^WEBVTT/.test(line)\r\n\r\n      if (this.state.isWebVTT) {\r\n        this.state.node.type = 'header'\r\n      } else {\r\n        this.parseId(line)\r\n        return\r\n      }\r\n    }\r\n\r\n    this.state.buffer.push(line)\r\n\r\n    if (!line) {\r\n      this.state.expect = 'id'\r\n      return\r\n    }\r\n  }\r\n\r\n  private parseId(line: string) {\r\n    this.state.expect = 'timestamp'\r\n\r\n    if (this.state.node.type === 'header') {\r\n      this.pushNode()\r\n    }\r\n\r\n    if (!this.isIndex(line)) {\r\n      this.parseTimestamp(line)\r\n    }\r\n  }\r\n\r\n  private parseTimestamp(line: string) {\r\n    if (!this.isTimestamp(line)) {\r\n      throw this.getError('timestamp', this.state.row, line)\r\n    }\r\n\r\n    this.state.node = {\r\n      type: 'cue',\r\n      data: {\r\n        ...parseTimestamps(line),\r\n        text: ''\r\n      }\r\n    }\r\n\r\n    this.state.expect = 'text'\r\n  }\r\n\r\n  private parseText(line: string) {\r\n    if (this.state.buffer.length > 0 && this.isTimestamp(line)) {\r\n      const lastIndex = this.state.buffer.length - 1\r\n\r\n      if (this.isIndex(this.state.buffer[lastIndex])) {\r\n        this.state.buffer.pop()\r\n      }\r\n\r\n      this.pushNode()\r\n      this.parseTimestamp(line)\r\n    } else {\r\n      this.state.buffer.push(line)\r\n    }\r\n  }\r\n\r\n  private pushNode(): void {\r\n    if (this.state.node.type === 'cue') {\r\n      while (true) {\r\n        const lastItem = this.state.buffer[this.state.buffer.length - 1]\r\n        if (['', '\\n'].includes(lastItem)) {\r\n          this.state.buffer.pop()\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      while (true) {\r\n        const firstItem = this.state.buffer[0]\r\n        if (['', '\\n'].includes(firstItem)) {\r\n          this.state.buffer.shift()\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      this.state.node.data!.text = this.state.buffer.join('\\n')\r\n    }\r\n\r\n    if (this.state.node.type === 'header') {\r\n      this.state.node.data = this.state.buffer.join('\\n').trim()\r\n    }\r\n\r\n    this.push(this.state.node as Node)\r\n\r\n    this.state.node = {}\r\n    this.state.buffer = []\r\n  }\r\n}\r\n","import multipipe from 'multipipe'\r\nimport split2 from 'split2'\r\nimport { createDuplex } from './utils'\r\nimport { Parser } from './Parser'\r\n\r\nexport const parse = () => {\r\n  const parser = new Parser({\r\n    push: node => outputStream.push(node)\r\n  })\r\n\r\n  const stream = createDuplex({\r\n    write(chunk, _encoding, next) {\r\n      try {\r\n        parser.parseLine(chunk.toString())\r\n      } catch (err) {\r\n        return next(err)\r\n      }\r\n\r\n      next()\r\n    }\r\n  })\r\n\r\n  const splitStream = split2()\r\n\r\n  splitStream.on('finish', () => {\r\n    parser.flush()\r\n    stream.push(null)\r\n  })\r\n\r\n  const outputStream = multipipe(splitStream, stream, {\r\n    objectMode: true\r\n  })\r\n\r\n  return outputStream\r\n}\r\n"],"names":["padLeft","value","length","toString","padStart","createDuplex","options","Duplex","objectMode","autoDestroy","read","filter","callback","write","chunk","_encoding","next","push","formatTimestamp","timestamp","format","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ms","map","mapper","index","Transform","transform","parseSync","input","buffer","parser","Parser","node","replace","split","forEach","line","parseLine","flush","parseTimestamp","match","Error","parseInt","milliseconds","RE_TIMESTAMP","parseTimestamps","exec","start","end","settings","resync","time","type","data","Formatter","hasReceivedHeader","isVTT","formatCue","cue","text","join","stringify","formatter","stringifySync","list","reduce","state","expect","row","hasContentStarted","isWebVTT","isIndex","test","trim","isTimestamp","getError","expected","contents","stripBom","parse","header","parseHeader","id","parseId","parseText","call","pushNode","lastIndex","pop","lastItem","includes","firstItem","shift","outputStream","stream","err","splitStream","split2","on","multipipe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAgBC,MAAhB;AAAA,MAAgBA,MAAhB;AAAgBA,IAAAA,MAAhB,GAAyB,CAAzB;AAAA;;AAAA,SACrBD,KAAK,CAACE,QAAN,GAAiBC,QAAjB,CAA0BF,MAA1B,EAAkC,GAAlC,CADqB;AAAA,CAAhB;AAGA,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,SAC1B,IAAIC,MAAJ;AACEC,IAAAA,UAAU,EAAE,IADd;AAEEC,IAAAA,WAAW,EAAE,KAFf;AAGEC,IAAAA,IAHF;AAAA,KAIKJ,OAJL,EAD0B;AAAA,CAArB;;ICFMK,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD;AAAA,SACpBP,YAAY,CAAC;AACXQ,IAAAA,KADW,iBACLC,KADK,EACEC,SADF,EACaC,IADb;AAET,UAAIJ,QAAQ,CAACE,KAAD,CAAZ,EAAqB;AACnB,aAAKG,IAAL,CAAUH,KAAV;AACD;;AACDE,MAAAA,IAAI;AACL;AANU,GAAD,CADQ;AAAA,CAAf;;SCASE,gBACdC,WACAb;MAAAA;AAAAA,IAAAA,UAAyB;AAAEc,MAAAA,MAAM,EAAE;AAAV;;;AAEzB,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2BH,SAA3B,CAAb;AAEA,MAAMI,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;AACA,MAAMC,OAAO,GAAGJ,IAAI,CAACK,UAAL,EAAhB;AACA,MAAMC,OAAO,GAAGN,IAAI,CAACO,UAAL,EAAhB;AACA,MAAMC,EAAE,GAAGV,SAAS,IAAII,KAAK,GAAG,OAAR,GAAkBE,OAAO,GAAG,KAA5B,GAAoCE,OAAO,GAAG,IAAlD,CAApB;AAEA,SAAU3B,OAAO,CAACuB,KAAD,CAAjB,SAA4BvB,OAAO,CAACyB,OAAD,CAAnC,SAAgDzB,OAAO,CAAC2B,OAAD,CAAvD,IACErB,OAAO,CAACc,MAAR,KAAmB,QAAnB,GAA8B,GAA9B,GAAoC,GADtC,IAEGpB,OAAO,CAAC6B,EAAD,EAAK,CAAL,CAFV;AAGD;;ICdYC,GAAG,GAAG,SAANA,GAAM,CAACC,MAAD;AACjB,MAAIC,KAAK,GAAG,CAAZ;AAEA,SAAO,IAAIC,SAAJ,CAAc;AACnBzB,IAAAA,UAAU,EAAE,IADO;AAEnBC,IAAAA,WAAW,EAAE,KAFM;AAGnByB,IAAAA,SAHmB,qBAGTpB,KAHS,EAGIC,SAHJ,EAGeH,QAHf;AAIjBA,MAAAA,QAAQ,CAAC,IAAD,EAAOmB,MAAM,CAACjB,KAAD,EAAQkB,KAAK,EAAb,CAAb,CAAR;AACD;AALkB,GAAd,CAAP;AAOD,CAVM;;ICAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AACvB,MAAMC,MAAM,GAAa,EAAzB;AACA,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW;AACxBtB,IAAAA,IAAI,EAAE,cAAAuB,IAAI;AAAA,aAAIH,MAAM,CAACpB,IAAP,CAAYuB,IAAZ,CAAJ;AAAA;AADc,GAAX,CAAf;AAIAJ,EAAAA,KAAK,CACFK,OADH,CACW,OADX,EACoB,IADpB,EAEGC,KAFH,CAES,IAFT,EAGGC,OAHH,CAGW,UAAAC,IAAI;AAAA,WAAIN,MAAM,CAACO,SAAP,CAAiBD,IAAjB,CAAJ;AAAA,GAHf;AAKAN,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAOT,MAAP;AACD,CAdM;;SCHSU,eAAe5B;AAC7B,MAAM6B,KAAK,GAAG7B,SAAS,CAAC6B,KAAV,CAAgB,4CAAhB,CAAd;;AAEA,MAAI,CAACA,KAAL,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,sCAAsC9B,SAAtC,GAAkD,GAA5D,CAAN;AACD;;AAED,MAAMI,KAAK,GAAGyB,KAAK,CAAC,CAAD,CAAL,GAAWE,QAAQ,CAACF,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,OAApC,GAA8C,CAA5D;AACA,MAAMvB,OAAO,GAAGyB,QAAQ,CAACF,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,KAAzC;AACA,MAAMrB,OAAO,GAAGuB,QAAQ,CAACF,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAR,GAAyB,IAAzC;AACA,MAAMG,YAAY,GAAGD,QAAQ,CAACF,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAA7B;AAEA,SAAOzB,KAAK,GAAGE,OAAR,GAAkBE,OAAlB,GAA4BwB,YAAnC;AACD;;ICXYC,YAAY,GAAG,uFAArB;AAEP,SAAgBC,gBAAgBpD;AAC9B,MAAM+C,KAAK,GAAGI,YAAY,CAACE,IAAb,CAAkBrD,KAAlB,CAAd;;AAEA,MAAI,CAAC+C,KAAL,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,MAAM9B,SAAS,GAAc;AAC3BoC,IAAAA,KAAK,EAAER,cAAc,CAACC,KAAK,CAAC,CAAD,CAAN,CADM;AAE3BQ,IAAAA,GAAG,EAAET,cAAc,CAACC,KAAK,CAAC,CAAD,CAAN;AAFQ,GAA7B;;AAKA,MAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACZ7B,IAAAA,SAAS,CAACsC,QAAV,GAAqBT,KAAK,CAAC,CAAD,CAA1B;AACD;;AAED,SAAO7B,SAAP;AACD;;ICnBYuC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA,SACpB7B,GAAG,CAAC,UAACU,IAAD;AACF,QAAIA,IAAI,CAACoB,IAAL,KAAc,KAAlB,EAAyB;AACvB,0BACKpB,IADL;AAEEqB,QAAAA,IAAI,eACCrB,IAAI,CAACqB,IADN;AAEFN,UAAAA,KAAK,EAAEf,IAAI,CAACqB,IAAL,CAAUN,KAAV,GAAkBI,IAFvB;AAGFH,UAAAA,GAAG,EAAEhB,IAAI,CAACqB,IAAL,CAAUL,GAAV,GAAgBG;AAHnB;AAFN;AAQD;;AAED,WAAOnB,IAAP;AACD,GAbE,CADiB;AAAA,CAAf;;ICAMsB,SAAb;AAME,qBAAYxD,OAAZ;AACE,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKyD,iBAAL,GAAyB,KAAzB;AACA,SAAKC,KAAL,GAAa1D,OAAO,CAACc,MAAR,KAAmB,QAAhC;AACA,SAAKY,KAAL,GAAa,CAAb;AACD;;AAXH;;AAAA,SAaSZ,MAbT,GAaS,gBAAOoB,IAAP;AACL,QAAIH,MAAM,GAAG,EAAb;;AAEA,QAAIG,IAAI,CAACoB,IAAL,KAAc,QAAd,IAA0B,KAAKI,KAAnC,EAA0C;AACxC,WAAKD,iBAAL,GAAyB,IAAzB;AACA1B,MAAAA,MAAM,IAAOG,IAAI,CAACqB,IAAZ,SAAN;AACD;;AAED,QAAIrB,IAAI,CAACoB,IAAL,KAAc,KAAlB,EAAyB;AACvB,UAAI,CAAC,KAAKG,iBAAN,IAA2B,KAAKC,KAApC,EAA2C;AACzC,aAAKD,iBAAL,GAAyB,IAAzB;AACA1B,QAAAA,MAAM,IAAI,YAAV;AACD;;AAEDA,MAAAA,MAAM,IAAI,KAAK4B,SAAL,CAAezB,IAAI,CAACqB,IAApB,EAA0B,KAAK7B,KAAL,EAA1B,EAAwC,KAAK1B,OAA7C,CAAV;AACD;;AAED,WAAO+B,MAAP;AACD,GA/BH;;AAAA,SAiCU4B,SAjCV,GAiCU,mBAAUC,GAAV,EAAoBlC,KAApB,EAAmC1B,OAAnC;AACN,WAAO,OACF0B,KAAK,GAAG,CAAR,GAAY,IAAZ,GAAmB,EADjB,IACsBA,KADtB,EAEFd,eAAe,CAACgD,GAAG,CAACX,KAAL,EAAYjD,OAAZ,CAFb,aAEyCY,eAAe,CAC3DgD,GAAG,CAACV,GADuD,EAE3DlD,OAF2D,CAFxD,IAMHA,OAAO,CAACc,MAAR,KAAmB,QAAnB,IAA+B8C,GAAG,CAACT,QAAnC,GAA8C,MAAMS,GAAG,CAACT,QAAxD,GAAmE,EANhE,GAQLS,GAAG,CAACC,IARC,EASL,EATK,EAULC,IAVK,CAUA,IAVA,CAAP;AAWD,GA7CH;;AAAA;AAAA;;ICCaC,SAAS,GAAG,SAAZA,SAAY,CAAC/D,OAAD;AACvB,MAAMgE,SAAS,GAAG,IAAIR,SAAJ,CAAcxD,OAAd,CAAlB;AACA,SAAOwB,GAAG,CAAC,UAAChB,KAAD;AAAA,WAAiBwD,SAAS,CAAClD,MAAV,CAAiBN,KAAjB,CAAjB;AAAA,GAAD,CAAV;AACD,CAHM;;ICAMyD,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,IAD2B,EAE3BlE,OAF2B;AAI3B,MAAMgE,SAAS,GAAG,IAAIR,SAAJ,CAAcxD,OAAd,CAAlB;AAEA,SAAOkE,IAAI,CAACC,MAAL,CAAY,UAACpC,MAAD,EAASG,IAAT;AACjB,WAAOH,MAAM,GAAGiC,SAAS,CAAClD,MAAV,CAAiBoB,IAAjB,CAAhB;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD,CATM;;ICWMD,MAAb;AAIE;QAActB,YAAAA;AACZ,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKyD,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,QADG;AAEXC,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,iBAAiB,EAAE,KAHR;AAIXC,MAAAA,QAAQ,EAAE,KAJC;AAKXtC,MAAAA,IAAI,EAAE,EALK;AAMXH,MAAAA,MAAM,EAAE;AANG,KAAb;AAQD;;AAdH;;AAAA,SAgBU0C,OAhBV,GAgBU,iBAAQnC,IAAR;AACN,WAAO,QAAQoC,IAAR,CAAapC,IAAI,CAACqC,IAAL,EAAb,CAAP;AACD,GAlBH;;AAAA,SAoBUC,WApBV,GAoBU,qBAAYtC,IAAZ;AACN,WAAOQ,YAAY,CAAC4B,IAAb,CAAkBpC,IAAlB,CAAP;AACD,GAtBH;;AAAA,SAwBUuC,QAxBV,GAwBU,kBAASC,QAAT,EAA2BpD,KAA3B,EAA0C4C,GAA1C;AACN,WAAO,IAAI3B,KAAJ,eACOmC,QADP,iBAC0BpD,KAAK,GAAG,CADlC,2BACuD4C,GADvD,QAAP;AAGD,GA5BH;;AAAA,SA8BS/B,SA9BT,GA8BS,mBAAUD,IAAV;AACL,QAAMyC,QAAQ,GAAG,KAAKX,KAAL,CAAWE,GAAX,KAAmB,CAAnB,GAAuBU,QAAQ,CAAC1C,IAAD,CAA/B,GAAwCA,IAAzD;;AAEA,QAAI,CAAC,KAAK8B,KAAL,CAAWG,iBAAhB,EAAmC;AACjC,UAAIQ,QAAQ,CAACJ,IAAT,EAAJ,EAAqB;AACnB,aAAKP,KAAL,CAAWG,iBAAX,GAA+B,IAA/B;AACD,OAFD,MAEO;AACL;AACD;AACF;;AAED,QAAMU,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAE,KAAKC,WADD;AAEZC,MAAAA,EAAE,EAAE,KAAKC,OAFG;AAGZxE,MAAAA,SAAS,EAAE,KAAK4B,cAHJ;AAIZoB,MAAAA,IAAI,EAAE,KAAKyB;AAJC,MAKZ,KAAKlB,KAAL,CAAWC,MALC,CAAd;AAOAY,IAAAA,KAAK,CAACM,IAAN,CAAW,IAAX,EAAiBR,QAAjB;AAEA,SAAKX,KAAL,CAAWE,GAAX;AACD,GAnDH;;AAAA,SAqDS9B,KArDT,GAqDS;AACL,QAAI,KAAK4B,KAAL,CAAWrC,MAAX,CAAkBnC,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,WAAK4F,QAAL;AACD;AACF,GAzDH;;AAAA,SA2DUL,WA3DV,GA2DU,qBAAY7C,IAAZ;AACN,QAAI,CAAC,KAAK8B,KAAL,CAAWI,QAAhB,EAA0B;AACxB,WAAKJ,KAAL,CAAWI,QAAX,GAAsB,UAAUE,IAAV,CAAepC,IAAf,CAAtB;;AAEA,UAAI,KAAK8B,KAAL,CAAWI,QAAf,EAAyB;AACvB,aAAKJ,KAAL,CAAWlC,IAAX,CAAgBoB,IAAhB,GAAuB,QAAvB;AACD,OAFD,MAEO;AACL,aAAK+B,OAAL,CAAa/C,IAAb;AACA;AACD;AACF;;AAED,SAAK8B,KAAL,CAAWrC,MAAX,CAAkBpB,IAAlB,CAAuB2B,IAAvB;;AAEA,QAAI,CAACA,IAAL,EAAW;AACT,WAAK8B,KAAL,CAAWC,MAAX,GAAoB,IAApB;AACA;AACD;AACF,GA7EH;;AAAA,SA+EUgB,OA/EV,GA+EU,iBAAQ/C,IAAR;AACN,SAAK8B,KAAL,CAAWC,MAAX,GAAoB,WAApB;;AAEA,QAAI,KAAKD,KAAL,CAAWlC,IAAX,CAAgBoB,IAAhB,KAAyB,QAA7B,EAAuC;AACrC,WAAKkC,QAAL;AACD;;AAED,QAAI,CAAC,KAAKf,OAAL,CAAanC,IAAb,CAAL,EAAyB;AACvB,WAAKG,cAAL,CAAoBH,IAApB;AACD;AACF,GAzFH;;AAAA,SA2FUG,cA3FV,GA2FU,wBAAeH,IAAf;AACN,QAAI,CAAC,KAAKsC,WAAL,CAAiBtC,IAAjB,CAAL,EAA6B;AAC3B,YAAM,KAAKuC,QAAL,CAAc,WAAd,EAA2B,KAAKT,KAAL,CAAWE,GAAtC,EAA2ChC,IAA3C,CAAN;AACD;;AAED,SAAK8B,KAAL,CAAWlC,IAAX,GAAkB;AAChBoB,MAAAA,IAAI,EAAE,KADU;AAEhBC,MAAAA,IAAI,eACCR,eAAe,CAACT,IAAD,CADhB;AAEFuB,QAAAA,IAAI,EAAE;AAFJ;AAFY,KAAlB;AAQA,SAAKO,KAAL,CAAWC,MAAX,GAAoB,MAApB;AACD,GAzGH;;AAAA,SA2GUiB,SA3GV,GA2GU,mBAAUhD,IAAV;AACN,QAAI,KAAK8B,KAAL,CAAWrC,MAAX,CAAkBnC,MAAlB,GAA2B,CAA3B,IAAgC,KAAKgF,WAAL,CAAiBtC,IAAjB,CAApC,EAA4D;AAC1D,UAAMmD,SAAS,GAAG,KAAKrB,KAAL,CAAWrC,MAAX,CAAkBnC,MAAlB,GAA2B,CAA7C;;AAEA,UAAI,KAAK6E,OAAL,CAAa,KAAKL,KAAL,CAAWrC,MAAX,CAAkB0D,SAAlB,CAAb,CAAJ,EAAgD;AAC9C,aAAKrB,KAAL,CAAWrC,MAAX,CAAkB2D,GAAlB;AACD;;AAED,WAAKF,QAAL;AACA,WAAK/C,cAAL,CAAoBH,IAApB;AACD,KATD,MASO;AACL,WAAK8B,KAAL,CAAWrC,MAAX,CAAkBpB,IAAlB,CAAuB2B,IAAvB;AACD;AACF,GAxHH;;AAAA,SA0HUkD,QA1HV,GA0HU;AACN,QAAI,KAAKpB,KAAL,CAAWlC,IAAX,CAAgBoB,IAAhB,KAAyB,KAA7B,EAAoC;AAClC,aAAO,IAAP,EAAa;AACX,YAAMqC,QAAQ,GAAG,KAAKvB,KAAL,CAAWrC,MAAX,CAAkB,KAAKqC,KAAL,CAAWrC,MAAX,CAAkBnC,MAAlB,GAA2B,CAA7C,CAAjB;;AACA,YAAI,CAAC,EAAD,EAAK,IAAL,EAAWgG,QAAX,CAAoBD,QAApB,CAAJ,EAAmC;AACjC,eAAKvB,KAAL,CAAWrC,MAAX,CAAkB2D,GAAlB;AACD,SAFD,MAEO;AACL;AACD;AACF;;AAED,aAAO,IAAP,EAAa;AACX,YAAMG,SAAS,GAAG,KAAKzB,KAAL,CAAWrC,MAAX,CAAkB,CAAlB,CAAlB;;AACA,YAAI,CAAC,EAAD,EAAK,IAAL,EAAW6D,QAAX,CAAoBC,SAApB,CAAJ,EAAoC;AAClC,eAAKzB,KAAL,CAAWrC,MAAX,CAAkB+D,KAAlB;AACD,SAFD,MAEO;AACL;AACD;AACF;;AAED,WAAK1B,KAAL,CAAWlC,IAAX,CAAgBqB,IAAhB,CAAsBM,IAAtB,GAA6B,KAAKO,KAAL,CAAWrC,MAAX,CAAkB+B,IAAlB,CAAuB,IAAvB,CAA7B;AACD;;AAED,QAAI,KAAKM,KAAL,CAAWlC,IAAX,CAAgBoB,IAAhB,KAAyB,QAA7B,EAAuC;AACrC,WAAKc,KAAL,CAAWlC,IAAX,CAAgBqB,IAAhB,GAAuB,KAAKa,KAAL,CAAWrC,MAAX,CAAkB+B,IAAlB,CAAuB,IAAvB,EAA6Ba,IAA7B,EAAvB;AACD;;AAED,SAAKhE,IAAL,CAAU,KAAKyD,KAAL,CAAWlC,IAArB;AAEA,SAAKkC,KAAL,CAAWlC,IAAX,GAAkB,EAAlB;AACA,SAAKkC,KAAL,CAAWrC,MAAX,GAAoB,EAApB;AACD,GAzJH;;AAAA;AAAA;;ICTakD,KAAK,GAAG,SAARA,KAAQ;AACnB,MAAMjD,MAAM,GAAG,IAAIC,MAAJ,CAAW;AACxBtB,IAAAA,IAAI,EAAE,cAAAuB,IAAI;AAAA,aAAI6D,YAAY,CAACpF,IAAb,CAAkBuB,IAAlB,CAAJ;AAAA;AADc,GAAX,CAAf;AAIA,MAAM8D,MAAM,GAAGjG,YAAY,CAAC;AAC1BQ,IAAAA,KAD0B,iBACpBC,KADoB,EACbC,SADa,EACFC,IADE;AAExB,UAAI;AACFsB,QAAAA,MAAM,CAACO,SAAP,CAAiB/B,KAAK,CAACX,QAAN,EAAjB;AACD,OAFD,CAEE,OAAOoG,GAAP,EAAY;AACZ,eAAOvF,IAAI,CAACuF,GAAD,CAAX;AACD;;AAEDvF,MAAAA,IAAI;AACL;AATyB,GAAD,CAA3B;AAYA,MAAMwF,WAAW,GAAGC,MAAM,EAA1B;AAEAD,EAAAA,WAAW,CAACE,EAAZ,CAAe,QAAf,EAAyB;AACvBpE,IAAAA,MAAM,CAACQ,KAAP;AACAwD,IAAAA,MAAM,CAACrF,IAAP,CAAY,IAAZ;AACD,GAHD;AAKA,MAAMoF,YAAY,GAAGM,SAAS,CAACH,WAAD,EAAcF,MAAd,EAAsB;AAClD9F,IAAAA,UAAU,EAAE;AADsC,GAAtB,CAA9B;AAIA,SAAO6F,YAAP;AACD,CA7BM;;;;"}